trophic_dist <- 1-trophic_dist
#trophic_dist <- upper.tri.remove(trophic_dist)
trophic_dist <- melt(cbind(rownames(trophic_dist),trophic_dist))
trophic_dist <- trophic_dist[which(!is.na(trophic_dist$value)),]
names(trophic_dist) <- c("Siph1","Siph2","TrophicOverlap")
trophic_dist <- trophic_dist[which(trophic_dist$Siph1 %in% spatial_dist$Siph1 & trophic_dist$Siph2 %in% spatial_dist$Siph2),]
spatial_dist <- spatial_dist[which(spatial_dist$Siph1 %in% trophic_dist$Siph1 & spatial_dist$Siph2 %in% trophic_dist$Siph2),]
Trophic_Spatial <- left_join(trophic_dist, spatial_dist, by=c("Siph1","Siph2"))
Trophic_Spatial[,3:4] <- sapply(Trophic_Spatial[,3:4],function(x){as.numeric(as.character(x))})
Trophic_Spatial <- Trophic_Spatial[which(Trophic_Spatial$TrophicOverlap+Trophic_Spatial$SpatialOverlap >0),]
#Trophic_Spatial[,3:4] <- sapply(Trophic_Spatial[,3:4],as.factor)
Trophic_Spatial <- Trophic_Spatial[which(Trophic_Spatial$Siph1 %in% rownames(H2SelData)),]
Trophic_Spatial <- Trophic_Spatial[which(Trophic_Spatial$Siph2 %in% rownames(H2SelData)),]
dyadSpecialization <- apply(Trophic_Spatial[,1:2],1,function(x){as.data.frame(cbind(paste(rownames(H2SelData)[which(rownames(H2SelData) %in% x[1])], rownames(H2SelData)[which(rownames(H2SelData) %in% x[2])], sep="_"), H2SelData[which(rownames(H2SelData) %in% x[1]),"Specialization"] + H2SelData[which(rownames(H2SelData) %in% x[2]),"Specialization"]))})
dyadSpecialization <- do.call(rbind, dyadSpecialization)
dyadSpecialization <- str_split(dyadSpecialization$V1, "_") %>% do.call(rbind, .) %>% cbind(dyadSpecialization$V2 %>% as.character() %>% as.numeric()) %>% as.data.frame()
names(dyadSpecialization) <- c("Siph1","Siph2","H2")
Trophic_Spatial[,3:4] <- sapply(Trophic_Spatial[,3:4],function(x){as.numeric(as.character(x))})
Trophic_Spatial <- left_join(Trophic_Spatial,dyadSpecialization, by=c("Siph1","Siph2"))
Trophic_Spatial$H2 <- as.numeric(as.character(Trophic_Spatial$H2))
Trophic_Spatial <- Trophic_Spatial[!duplicated(Trophic_Spatial[3:5]),]
#Trophic_Spatial <- Trophic_Spatial[which(Trophic_Spatial$TrophicOverlap>0),]
ggplot(Trophic_Spatial, aes(x = SpatialOverlap, y = TrophicOverlap, label=paste(Siph1,Siph2))) + geom_point(alpha = 0.7, aes(cex=H2,col=H2)) + theme_bw() +geom_text(cex=1.2) + geom_smooth(method='loess')
quad_count <- Trophic_Spatial %>%
# Count how many with each combination of X and Y being positive
count(right = SpatialOverlap > 0.075, top = TrophicOverlap > 0.5) %>%
# TRUE = 1, FALSE = 0, so these map the TRUE to +1 and FALSE to -1
mutate(SpatialOverlap = 2 * (right - 0.5), TrophicOverlap = 2 * (top - 0.5))
TRquad <- data.frame(TRUE,TRUE,0,1,1)
names(TRquad) <- names(quad_count)
quad_count <- rbind(quad_count, TRquad)
Trophic_Spatial %>%
ggplot(aes(x = SpatialOverlap, y = TrophicOverlap, label=paste(Siph1,Siph2))) +
geom_point(alpha = 0.7) +
geom_hline(aes(yintercept = 0.5)) +
geom_vline(aes(xintercept = 0.075)) +
theme_bw() +
geom_text(cex=1.2) +
# This layer should use the other dataset, but keep using X and Y for location
geom_text(data = quad_count, aes(label = n), x=c(0.03,0.03,0.12,0.12), y=c(0.2,0.8,0.2,0.8), size = 6) +
xlim(0,0.15) + ylim(0,1)
#  TEST  #
chisq.test(quad_count$n,p=c(0.4,0.2,0.2,0.2)) -> xst
chisq.test(quad_count$n) -> xst
xst
cor.test(Trophic_Spatial$TrophicOverlap,Trophic_Spatial$SpatialOverlap)
#NMDS
# par(mfrow=c(1,2))
# metaMDS(trophic_data)->trophicORD
# ordiplot(trophicORD)
# orditorp(trophicORD,display="sites")
#
# metaMDS(spatial_data[which(rowSums(spatial_data)>0),which(colSums(spatial_data)>0)])->spatialORD
# ordiplot(spatialORD)
# orditorp(spatialORD,display="sites")
# par(mfrow=c(1,1))
####~####
########################################
# data table for cleaning unique observations -Alex L
uniqe = assocs %>% group_by(DiveNumber, ConceptName, ToConcept) %>%
count(ObservationID)
#TEST
mantel(vegdist(t(rel_assoc_matrix_grp)), vegdist(t(rel_overmatrix_grp)))
mantel(vegdist(t(rel_assoc_matrix)), vegdist(t(rel_overmatrix)))
#TEST
cor.test(H2SelData$Specialization, H2SelData$Total.Selectivity)
corrplot(as.matrix(rel_assoc_matrix_grp), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp %>% log()), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp %>% -log()), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(-rel_overmatrix_grp %>% log()), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp %>% log() %>% .*-1), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
rel_overmatrix_grp
rel_overmatrix_grp %>% log()
rel_overmatrix_grp %>% log() %>% abs()
corrplot(as.matrix(rel_overmatrix_grp %>% log() %>% abs()), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp %>% 10-log() %>% abs()), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp %>% log() %>% (.+10)), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp %>% log() %>% (+10)), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
rel_overmatrix_grp+10
corrplot(as.matrix(rel_overmatrix_grp*10 %>% log()), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp %>% log()), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp %>% exp()), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp %>% sqrt()), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_overmatrix_grp), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(rel_assoc_matrix_grp), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
corrplot(as.matrix(selectivity_grp), is.corr = F, method = 'color', tl.col = "black", tl.srt = 45,
tl.cex = 0.75,
addgrid.col = "black", na.label = 'NA')
ggplot(H2SelData, aes(x = Specialization, y = Total.Selectivity, label = rownames(H2SelData))) + geom_point(alpha = 0.7, aes(cex=Events)) + geom_text(hjust=-0.1, vjust=-0.1, cex=2.9) + geom_smooth(method='lm') + theme_bw()
ggplot(H2SelData, aes(x = Specialization, y = Total.Selectivity, label = rownames(H2SelData))) + geom_point(alpha = 0.7, aes(cex=Events)) + geom_text(hjust=-0.5, vjust=-0.1, cex=2.9) + geom_smooth(method='lm') + theme_bw()
ggplot(H2SelData, aes(x = Specialization, y = Total.Selectivity, label = rownames(H2SelData))) + geom_point(alpha = 0.7, aes(cex=Events)) + geom_text(hjust=0.5, vjust=-0.1, cex=2.9) + geom_smooth(method='lm') + theme_bw()
ggplot(H2SelData, aes(x = Specialization, y = Total.Selectivity, label = rownames(H2SelData))) + geom_point(alpha = 0.7, aes(cex=Events)) + geom_text(hjust=0.6, vjust=-0.3, cex=2.9) + geom_smooth(method='lm') + theme_bw()
ggplot(H2SelData, aes(x = Specialization, y = Total.Selectivity, label = rownames(H2SelData))) + geom_point(alpha = 0.7, aes(cex=Events)) + geom_text(hjust=0.6, vjust=-0.3, cex=2.5) + geom_smooth(method='lm') + theme_bw()
ggplot(Depth2Sel, aes(x = Specialization, y = -`Median depth (m)`, label = Species)) + geom_point(alpha = 0.7, aes(cex=Events)) + geom_text(hjust=0.2, vjust=-0.2, cex=2.9) + geom_smooth(method='lm') + theme_bw()
ggplot(Depth2Sel, aes(x = Specialization, y = -`Median depth (m)`, label = Species)) + geom_point(alpha = 0.7, aes(cex=Events)) + geom_text(hjust=0.6, vjust=-0.3, cex=2.5) + geom_smooth(method='lm') + theme_bw()
#TEST#
cor.test(Depth2Sel$Specialization, Depth2Sel$`Median depth (m)`)
#TEST#
cor.test(Depth2Sel$Specialization, Depth2Sel$`Median depth (m)`)
#TEST#
cor.test(Depth2Sel$Specialization, Depth2Sel$`Median depth (m)`)
Depth2Sel$Specialization
Depth2Sel$`Depth range (m)`
Depth2Sel$`Median depth (m)`
cor.test(Depth2Sel$`Median depth (m)`, Depth2Sel$`Depth range (m)`)
cor.test(Depth2Sel$Specialization, Depth2Sel$`Depth range (m)`)
cor.test(Depth2Sel$Specialization, Depth2Sel$`Depth range (m)`)
Trophic_Spatial %>%
ggplot(aes(x = SpatialOverlap, y = TrophicOverlap, label=paste(Siph1,Siph2))) +
geom_point(alpha = 0.7) +
geom_hline(aes(yintercept = 0.5)) +
geom_vline(aes(xintercept = 0.075)) +
theme_bw() +
geom_text(cex=1.2) +
# This layer should use the other dataset, but keep using X and Y for location
geom_text(data = quad_count, aes(label = n), x=c(0.03,0.03,0.12,0.12), y=c(0.2,0.8,0.2,0.8), size = 6) +
xlim(0,0.15) + ylim(0,1)
cor.test(Trophic_Spatial$TrophicOverlap,Trophic_Spatial$SpatialOverlap)
meadian(Trophic_Spatial$SpatialOverlap)
median(Trophic_Spatial$SpatialOverlap)
mean(Trophic_Spatial$SpatialOverlap)
mean(Trophic_Spatial$TrophicOverlapOverlap)
mean(Trophic_Spatial$TrophicOverlap)
median(Trophic_Spatial$TrophicOverlap)
max(Trophic_Spatial$SpatialOverlap)/2
library(tidyverse)
library(reshape2)
library(scales)
library(RColorBrewer)
library(forcats)
library(vegan)
library(adegenet)
library(magrittr)
library(plyr)
library(paleotree)
library(phytools)
library(patchwork)
library(ggtree)
library(ggplotify)
barcodes=c("134", "152","166", "179", "261", "272")
setwd("/Volumes/GoogleDrive/My Drive/Metabarcoding_things/IDtables_ALL")
unids = c("RUN5")
runids = c("RUN5")
metacomblist=list()
metarel_list=list()
for(run in 1:length(runids)){
runid=runids[run]
IDLIST=list()
prunedlist=list()
IDLIST_def=list()
prunedlist_def=list()
rel_list = list()
if(runid=="RUN2"){
barcodes=c("134", "152","166", "17nine", "261", "272")
}
else barcodes = c("134", "152","166", "179", "261", "272")
for(i in 1:length(barcodes)){
istring = paste(runid, barcodes[i], "IDtable.tsv", sep="")
istring_def = paste("METAXA2_custom_",runid, barcodes[i], "IDtable_custom.tsv", sep="")
IDLIST[[i]] <- read.csv(file = istring, header = TRUE, sep = " ", stringsAsFactors = F)
IDLIST_def[[i]] <- read.csv(file = istring_def, header = TRUE, sep = " ", stringsAsFactors = F)
names(IDLIST)[i]<-paste(runid, barcodes[i],sep="")
names(IDLIST_def)[i]<-paste(runid, barcodes[i],sep="")
prunedlist[[i]] <- cbind(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")), rep(runids[run], nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))), rep(barcodes[i], nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))), rep("SILVA", nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))))
names(prunedlist[[i]]) <- c("Feature_name", "OTU","sample", "abundance","run","barcode","database")
prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, paste("X",barcodes[i],"_", sep = ""),"")
if(runid=="RUN0"){
prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, "_[CGTA]+.[CGTA]+_L001","")
}
else prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, "_\\w\\w\\w_\\w\\w\\w_S\\w+_L001","")
def_melt <- melt(IDLIST_def[[i]], id.vars = c("Feature_name", "OTU"))
def_melt_nrow <- nrow(def_melt)
prunedlist_def[[i]] <- cbind(def_melt, rep(runids[run],def_melt_nrow), rep(barcodes[i], def_melt_nrow), rep("Custom", def_melt_nrow))
names(prunedlist_def[[i]]) <- c("Feature_name", "OTU","sample", "abundance","run","barcode","database")
prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, paste("X",barcodes[i],"_", sep = ""),"")
if(runid=="RUN0"){
prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, "_[CGTA]+.[CGTA]+_L001","")
}
else prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, "_\\w\\w\\w_\\w\\w\\w_S\\w+_L001","")
names(prunedlist)[i]<-paste(runid, barcodes[i],sep="")
names(prunedlist_def)[i]<-paste(runid, barcodes[i],sep="")
#prunedlist[[i]] <- prunedlist[[i]][which(prunedlist[[i]]$abundance>0 & str_count(prunedlist[[i]]$OTU,"Metazoa")>0 & str_count(prunedlist[[i]]$OTU,"Hydroidolina")==0 & str_count(prunedlist[[i]]$OTU,"Mammalia")==0 & str_count(prunedlist[[i]]$OTU,"Metazoa__")==0 & str_count(prunedlist[[i]]$OTU,"Tubificin")==0 & str_count(prunedlist[[i]]$OTU,"Catenulid")==0 & str_count(prunedlist[[i]]$OTU,"Pentastomida")==0 & str_count(prunedlist[[i]]$OTU,"Myxozoa")==0 & str_count(prunedlist[[i]]$OTU,"Insect")==0),]
prunedlist[[i]] <- prunedlist[[i]][which(prunedlist[[i]]$abundance>0),]
#prunedlist_def[[i]] <- prunedlist_def[[i]][which(prunedlist_def[[i]]$abundance>0 & str_count(prunedlist_def[[i]]$OTU,"Hydroidolina")==0 & str_count(prunedlist_def[[i]]$OTU,"Mammalia")==0 & str_count(prunedlist_def[[i]]$OTU,"Tubificin")==0 & str_count(prunedlist_def[[i]]$OTU,"Catenulid")==0 & str_count(prunedlist_def[[i]]$OTU,"Pentastomida")==0 & str_count(prunedlist_def[[i]]$OTU,"Myxozoa")==0 & str_count(prunedlist_def[[i]]$OTU,"Insect")==0),]
prunedlist_def[[i]] <- prunedlist_def[[i]][which(prunedlist_def[[i]]$abundance>0),]
irel = paste("METAXA2_",runid, barcodes[i], ".taxonomy-reliability.txt", sep="")
irel_def = paste("METAXA2_custom_",runid, barcodes[i], ".taxonomy-reliability.txt", sep="")
rel_i <- read.csv(file = irel, header = FALSE, sep = "\t", stringsAsFactors = F)
rel_i <- cbind(rel_i, rep(runids[run],nrow(rel_i)), rep(barcodes[i], nrow(rel_i)), rep("SILVA", nrow(rel_i)))
if (!file.size(irel_def) == 0) {
rel_i_def <- read.csv(file = irel_def, header = FALSE, sep = "\t", stringsAsFactors = F)
rel_i_def <- cbind(rel_i_def, rep(runids[run],nrow(rel_i_def)), rep(barcodes[i], nrow(rel_i_def)), rep("Custom", nrow(rel_i_def)))
names(rel_i_def) <- c("Feature_name", "Relative_IDs", "run","barcode","database")
}
else rel_i_def <- data.frame()
names(rel_i) <- c("Feature_name", "Relative_IDs", "run","barcode","database")
rel_i_comb <- rbind(rel_i, rel_i_def)
rel_list[[i]] <- rel_i_comb
}
comblist = lapply(seq_along(prunedlist), function(x){rbind(prunedlist[[x]], prunedlist_def[[x]])})
metacomblist[[run]] <- comblist
metarel_list[[run]] <- rel_list
}
names(metacomblist) <- runids
names(metarel_list) <- runids
metacomblist=list()
metarel_list=list()
for(run in 1:length(runids)){
runid=runids[run]
IDLIST=list()
prunedlist=list()
IDLIST_def=list()
prunedlist_def=list()
rel_list = list()
if(runid=="RUN2"){
barcodes=c("134", "152","166", "17nine", "261", "272")
}
else barcodes = c("134", "152","166", "179", "261", "272")
for(i in 1:length(barcodes)){
istring = paste(runid, barcodes[i], "IDtable.tsv", sep="")
istring_def = paste("METAXA2_custom_",runid, barcodes[i], "IDtable_custom.tsv", sep="")
IDLIST[[i]] <- read.csv(file = istring, header = TRUE, sep = " ", stringsAsFactors = F)
IDLIST_def[[i]] <- read.csv(file = istring_def, header = TRUE, sep = " ", stringsAsFactors = F)
names(IDLIST)[i]<-paste(runid, barcodes[i],sep="")
names(IDLIST_def)[i]<-paste(runid, barcodes[i],sep="")
prunedlist[[i]] <- cbind(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")), rep(runids[run], nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))), rep(barcodes[i], nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))), rep("SILVA", nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))))
names(prunedlist[[i]]) <- c("Feature_name", "OTU","sample", "abundance","run","barcode","database")
prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, paste("X",barcodes[i],"_", sep = ""),"")
if(runid=="RUN0"){
prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, "_[CGTA]+.[CGTA]+_L001","")
}
else prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, "_\\w\\w\\w_\\w\\w\\w_S\\w+_L001","")
def_melt <- melt(IDLIST_def[[i]], id.vars = c("Feature_name", "OTU"))
def_melt_nrow <- nrow(def_melt)
prunedlist_def[[i]] <- cbind(def_melt, rep(runids[run],def_melt_nrow), rep(barcodes[i], def_melt_nrow), rep("Custom", def_melt_nrow))
names(prunedlist_def[[i]]) <- c("Feature_name", "OTU","sample", "abundance","run","barcode","database")
prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, paste("X",barcodes[i],"_", sep = ""),"")
if(runid=="RUN0"){
prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, "_[CGTA]+.[CGTA]+_L001","")
}
else prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, "_\\w\\w\\w_\\w\\w\\w_S\\w+_L001","")
names(prunedlist)[i]<-paste(runid, barcodes[i],sep="")
names(prunedlist_def)[i]<-paste(runid, barcodes[i],sep="")
#prunedlist[[i]] <- prunedlist[[i]][which(prunedlist[[i]]$abundance>0 & str_count(prunedlist[[i]]$OTU,"Metazoa")>0 & str_count(prunedlist[[i]]$OTU,"Hydroidolina")==0 & str_count(prunedlist[[i]]$OTU,"Mammalia")==0 & str_count(prunedlist[[i]]$OTU,"Metazoa__")==0 & str_count(prunedlist[[i]]$OTU,"Tubificin")==0 & str_count(prunedlist[[i]]$OTU,"Catenulid")==0 & str_count(prunedlist[[i]]$OTU,"Pentastomida")==0 & str_count(prunedlist[[i]]$OTU,"Myxozoa")==0 & str_count(prunedlist[[i]]$OTU,"Insect")==0),]
prunedlist[[i]] <- prunedlist[[i]][which(prunedlist[[i]]$abundance>0),]
#prunedlist_def[[i]] <- prunedlist_def[[i]][which(prunedlist_def[[i]]$abundance>0 & str_count(prunedlist_def[[i]]$OTU,"Hydroidolina")==0 & str_count(prunedlist_def[[i]]$OTU,"Mammalia")==0 & str_count(prunedlist_def[[i]]$OTU,"Tubificin")==0 & str_count(prunedlist_def[[i]]$OTU,"Catenulid")==0 & str_count(prunedlist_def[[i]]$OTU,"Pentastomida")==0 & str_count(prunedlist_def[[i]]$OTU,"Myxozoa")==0 & str_count(prunedlist_def[[i]]$OTU,"Insect")==0),]
prunedlist_def[[i]] <- prunedlist_def[[i]][which(prunedlist_def[[i]]$abundance>0),]
irel = paste("METAXA2_",runid, barcodes[i], ".taxonomy-reliability.txt", sep="")
irel_def = paste("METAXA2_custom_",runid, barcodes[i], ".taxonomy-reliability.txt", sep="")
rel_i <- read.csv(file = irel, header = FALSE, sep = "\t", stringsAsFactors = F)
rel_i <- cbind(rel_i, rep(runids[run],nrow(rel_i)), rep(barcodes[i], nrow(rel_i)), rep("SILVA", nrow(rel_i)))
if (!file.size(irel_def) == 0) {
rel_i_def <- read.csv(file = irel_def, header = FALSE, sep = "\t", stringsAsFactors = F)
rel_i_def <- cbind(rel_i_def, rep(runids[run],nrow(rel_i_def)), rep(barcodes[i], nrow(rel_i_def)), rep("Custom", nrow(rel_i_def)))
names(rel_i_def) <- c("Feature_name", "Relative_IDs", "run","barcode","database")
}
else rel_i_def <- data.frame()
names(rel_i) <- c("Feature_name", "Relative_IDs", "run","barcode","database")
rel_i_comb <- rbind(rel_i, rel_i_def)
rel_list[[i]] <- rel_i_comb
}
comblist = lapply(seq_along(prunedlist), function(x){rbind(prunedlist[[x]], prunedlist_def[[x]])})
metacomblist[[run]] <- comblist
metarel_list[[run]] <- rel_list
}
names(metacomblist) <- runids
names(metarel_list) <- runids
metacomblist=list()
metarel_list=list()
for(run in 1:length(runids)){
runid=runids[run]
IDLIST=list()
prunedlist=list()
IDLIST_def=list()
prunedlist_def=list()
rel_list = list()
if(runid=="RUN2"){
barcodes=c("134", "152","166", "17nine", "261", "272")
}
else barcodes = c("134", "152","166", "179", "261", "272")
for(i in 1:length(barcodes)){
istring = paste(runid, barcodes[i], "IDtable.tsv", sep="")
istring_def = paste("METAXA2_custom_",runid, barcodes[i], "IDtable_custom.tsv", sep="")
IDLIST[[i]] <- read.csv(file = istring, header = TRUE, sep = " ", stringsAsFactors = F)
IDLIST_def[[i]] <- read.csv(file = istring_def, header = TRUE, sep = " ", stringsAsFactors = F)
names(IDLIST)[i]<-paste(runid, barcodes[i],sep="")
names(IDLIST_def)[i]<-paste(runid, barcodes[i],sep="")
prunedlist[[i]] <- cbind(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")), rep(runids[run], nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))), rep(barcodes[i], nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))), rep("SILVA", nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))))
names(prunedlist[[i]]) <- c("Feature_name", "OTU","sample", "abundance","run","barcode","database")
prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, paste("X",barcodes[i],"_", sep = ""),"")
if(runid=="RUN0"){
prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, "_[CGTA]+.[CGTA]+_L001","")
}
else prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, "_\\w\\w\\w_\\w\\w\\w_S\\w+_L001","")
def_melt <- melt(IDLIST_def[[i]], id.vars = c("Feature_name", "OTU"))
def_melt_nrow <- nrow(def_melt)
prunedlist_def[[i]] <- cbind(def_melt, rep(runids[run],def_melt_nrow), rep(barcodes[i], def_melt_nrow), rep("Custom", def_melt_nrow))
names(prunedlist_def[[i]]) <- c("Feature_name", "OTU","sample", "abundance","run","barcode","database")
prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, paste("X",barcodes[i],"_", sep = ""),"")
if(runid=="RUN0"){
prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, "_[CGTA]+.[CGTA]+_L001","")
}
else prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, "_\\w\\w\\w_\\w\\w\\w_S\\w+_L001","")
names(prunedlist)[i]<-paste(runid, barcodes[i],sep="")
names(prunedlist_def)[i]<-paste(runid, barcodes[i],sep="")
#prunedlist[[i]] <- prunedlist[[i]][which(prunedlist[[i]]$abundance>0 & str_count(prunedlist[[i]]$OTU,"Metazoa")>0 & str_count(prunedlist[[i]]$OTU,"Hydroidolina")==0 & str_count(prunedlist[[i]]$OTU,"Mammalia")==0 & str_count(prunedlist[[i]]$OTU,"Metazoa__")==0 & str_count(prunedlist[[i]]$OTU,"Tubificin")==0 & str_count(prunedlist[[i]]$OTU,"Catenulid")==0 & str_count(prunedlist[[i]]$OTU,"Pentastomida")==0 & str_count(prunedlist[[i]]$OTU,"Myxozoa")==0 & str_count(prunedlist[[i]]$OTU,"Insect")==0),]
prunedlist[[i]] <- prunedlist[[i]][which(prunedlist[[i]]$abundance>0),]
#prunedlist_def[[i]] <- prunedlist_def[[i]][which(prunedlist_def[[i]]$abundance>0 & str_count(prunedlist_def[[i]]$OTU,"Hydroidolina")==0 & str_count(prunedlist_def[[i]]$OTU,"Mammalia")==0 & str_count(prunedlist_def[[i]]$OTU,"Tubificin")==0 & str_count(prunedlist_def[[i]]$OTU,"Catenulid")==0 & str_count(prunedlist_def[[i]]$OTU,"Pentastomida")==0 & str_count(prunedlist_def[[i]]$OTU,"Myxozoa")==0 & str_count(prunedlist_def[[i]]$OTU,"Insect")==0),]
prunedlist_def[[i]] <- prunedlist_def[[i]][which(prunedlist_def[[i]]$abundance>0),]
irel = paste("METAXA2_",runid, barcodes[i], ".taxonomy-reliability.txt", sep="")
irel_def = paste("METAXA2_custom_",runid, barcodes[i], ".taxonomy-reliability.txt", sep="")
rel_i <- read.csv(file = irel, header = FALSE, sep = "\t", stringsAsFactors = F)
rel_i <- cbind(rel_i, rep(runids[run],nrow(rel_i)), rep(barcodes[i], nrow(rel_i)), rep("SILVA", nrow(rel_i)))
if (!file.size(irel_def) == 0) {
rel_i_def <- read.csv(file = irel_def, header = FALSE, sep = "\t", stringsAsFactors = F)
rel_i_def <- cbind(rel_i_def, rep(runids[run],nrow(rel_i_def)), rep(barcodes[i], nrow(rel_i_def)), rep("Custom", nrow(rel_i_def)))
names(rel_i_def) <- c("Feature_name", "Relative_IDs", "run","barcode","database")
}
else rel_i_def <- data.frame()
names(rel_i) <- c("Feature_name", "Relative_IDs", "run","barcode","database")
rel_i_comb <- rbind(rel_i, rel_i_def)
rel_list[[i]] <- rel_i_comb
}
comblist = lapply(seq_along(prunedlist), function(x){rbind(prunedlist[[x]], prunedlist_def[[x]])})
metacomblist[[run]] <- comblist
metarel_list[[run]] <- rel_list
}
names(metacomblist) <- runids
names(metarel_list) <- runids
metacomblist=list()
metarel_list=list()
for(run in 1:length(runids)){
runid=runids[run]
IDLIST=list()
prunedlist=list()
IDLIST_def=list()
prunedlist_def=list()
rel_list = list()
if(runid=="RUN2"){
barcodes=c("134", "152","166", "17nine", "261", "272")
}
else barcodes = c("134", "152","166", "179", "261", "272")
for(i in 1:length(barcodes)){
istring = paste(runid, barcodes[i], "IDtable.tsv", sep="")
istring_def = paste("METAXA2_custom_",runid, barcodes[i], "IDtable_custom.tsv", sep="")
IDLIST[[i]] <- read.csv(file = istring, header = TRUE, sep = " ", stringsAsFactors = F)
IDLIST_def[[i]] <- read.csv(file = istring_def, header = TRUE, sep = " ", stringsAsFactors = F)
names(IDLIST)[i]<-paste(runid, barcodes[i],sep="")
names(IDLIST_def)[i]<-paste(runid, barcodes[i],sep="")
prunedlist[[i]] <- cbind(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")), rep(runids[run], nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))), rep(barcodes[i], nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))), rep("SILVA", nrow(melt(IDLIST[[i]], id.vars = c("Feature_name", "OTU")))))
names(prunedlist[[i]]) <- c("Feature_name", "OTU","sample", "abundance","run","barcode","database")
prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, paste("X",barcodes[i],"_", sep = ""),"")
if(runid=="RUN0"){
prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, "_[CGTA]+.[CGTA]+_L001","")
}
else prunedlist[[i]]$sample <- str_replace_all(prunedlist[[i]]$sample, "_\\w\\w\\w_\\w\\w\\w_S\\w+_L001","")
def_melt <- melt(IDLIST_def[[i]], id.vars = c("Feature_name", "OTU"))
def_melt_nrow <- nrow(def_melt)
prunedlist_def[[i]] <- cbind(def_melt, rep(runids[run],def_melt_nrow), rep(barcodes[i], def_melt_nrow), rep("Custom", def_melt_nrow))
names(prunedlist_def[[i]]) <- c("Feature_name", "OTU","sample", "abundance","run","barcode","database")
prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, paste("X",barcodes[i],"_", sep = ""),"")
if(runid=="RUN0"){
prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, "_[CGTA]+.[CGTA]+_L001","")
}
else prunedlist_def[[i]]$sample <- str_replace_all(prunedlist_def[[i]]$sample, "_\\w\\w\\w_\\w\\w\\w_S\\w+_L001","")
names(prunedlist)[i]<-paste(runid, barcodes[i],sep="")
names(prunedlist_def)[i]<-paste(runid, barcodes[i],sep="")
#prunedlist[[i]] <- prunedlist[[i]][which(prunedlist[[i]]$abundance>0 & str_count(prunedlist[[i]]$OTU,"Metazoa")>0 & str_count(prunedlist[[i]]$OTU,"Hydroidolina")==0 & str_count(prunedlist[[i]]$OTU,"Mammalia")==0 & str_count(prunedlist[[i]]$OTU,"Metazoa__")==0 & str_count(prunedlist[[i]]$OTU,"Tubificin")==0 & str_count(prunedlist[[i]]$OTU,"Catenulid")==0 & str_count(prunedlist[[i]]$OTU,"Pentastomida")==0 & str_count(prunedlist[[i]]$OTU,"Myxozoa")==0 & str_count(prunedlist[[i]]$OTU,"Insect")==0),]
prunedlist[[i]] <- prunedlist[[i]][which(prunedlist[[i]]$abundance>0),]
#prunedlist_def[[i]] <- prunedlist_def[[i]][which(prunedlist_def[[i]]$abundance>0 & str_count(prunedlist_def[[i]]$OTU,"Hydroidolina")==0 & str_count(prunedlist_def[[i]]$OTU,"Mammalia")==0 & str_count(prunedlist_def[[i]]$OTU,"Tubificin")==0 & str_count(prunedlist_def[[i]]$OTU,"Catenulid")==0 & str_count(prunedlist_def[[i]]$OTU,"Pentastomida")==0 & str_count(prunedlist_def[[i]]$OTU,"Myxozoa")==0 & str_count(prunedlist_def[[i]]$OTU,"Insect")==0),]
prunedlist_def[[i]] <- prunedlist_def[[i]][which(prunedlist_def[[i]]$abundance>0),]
irel = paste("METAXA2_",runid, barcodes[i], ".taxonomy-reliability.txt", sep="")
irel_def = paste("METAXA2_custom_",runid, barcodes[i], ".taxonomy-reliability.txt", sep="")
rel_i <- read.csv(file = irel, header = FALSE, sep = "\t", stringsAsFactors = F)
rel_i <- cbind(rel_i, rep(runids[run],nrow(rel_i)), rep(barcodes[i], nrow(rel_i)), rep("SILVA", nrow(rel_i)))
if (!file.size(irel_def) == 0) {
rel_i_def <- read.csv(file = irel_def, header = FALSE, sep = "\t", stringsAsFactors = F)
rel_i_def <- cbind(rel_i_def, rep(runids[run],nrow(rel_i_def)), rep(barcodes[i], nrow(rel_i_def)), rep("Custom", nrow(rel_i_def)))
names(rel_i_def) <- c("Feature_name", "Relative_IDs", "run","barcode","database")
}
else rel_i_def <- data.frame()
names(rel_i) <- c("Feature_name", "Relative_IDs", "run","barcode","database")
rel_i_comb <- rbind(rel_i, rel_i_def)
rel_list[[i]] <- rel_i_comb
}
comblist = lapply(seq_along(prunedlist), function(x){rbind(prunedlist[[x]], prunedlist_def[[x]])})
metacomblist[[run]] <- comblist
metarel_list[[run]] <- rel_list
}
names(metacomblist) <- runids
names(metarel_list) <- runids
metacomblist_rel=list()
for(run in 1:length(runids)){
#Combine reliability onto OTUs
comblist = metacomblist[[run]]
comblist_rel = metacomblist[[run]]
rel_list <- metarel_list[[run]]
for(i in 1:length(barcodes)){
combi = comblist[[i]]
reli = rel_list[[i]]
reli_pruned = reli[which(reli$Feature_name %in% combi$Feature_name),]
comblist_rel[[i]] <- cbind(combi, reli_pruned[match(combi$Feature_name, reli_pruned$Feature_name),"Relative_IDs"])
names(comblist_rel[[i]])[8]<-"Relative_IDs"
}
metacomblist_rel[[run]] <- comblist_rel
}
#Import taxonomy
metatablist=list()
for(run in 1:length(runids)){
tab_list = list()
runid=runids[run]
for(i in 1:length(barcodes)){
istring_def = paste("METAXA2_custom_",runid, barcodes[i], ".taxonomy.txt", sep="")
istring = paste("METAXA2_",runid, barcodes[i], ".taxonomy-table.tsv", sep="")
tab_i <- read.csv(file = istring, header = FALSE, sep = ",", stringsAsFactors = F)
if (!file.size(istring_def) == 0) {
print("custom entries present")
tab_i_def <- read.csv(file = istring_def, header = FALSE, sep = "\t", stringsAsFactors = F)[,1:3]
}
else tab_i_def <- data.frame()
if(run==1 | run==5){
print("processing RUN0 or RUN4")
istring = paste("METAXA2_",runid, barcodes[i], ".taxonomy.txt", sep="")
tab_i <- read.csv(file = istring, header = FALSE, sep = "\t", stringsAsFactors = F)[,1:3]
istring_def = paste("METAXA2_custom_",runid, barcodes[i], ".taxonomy.txt", sep="")
if (!file.size(istring_def) == 0) {
print("custom entries present in RUN0/RUN4")
tab_i_def <- read.csv(file = istring_def, header = FALSE, sep = "\t", stringsAsFactors = F)[,1:3]
}
else tab_i_def <- data.frame()
}
tab_i <- cbind(tab_i, rep(runids[run],nrow(tab_i)), rep(barcodes[i], nrow(tab_i)), rep("SILVA", nrow(tab_i)))
names(tab_i) <- c("Feature_name", "IDs", "scores", "run","barcode","database")
if (nrow(tab_i_def) > 0) {
print("custom entries parsed")
tab_i_def <- cbind(tab_i_def, rep(runids[run],nrow(tab_i_def)), rep(barcodes[i], nrow(tab_i_def)), rep("Custom", nrow(tab_i_def)))
names(tab_i_def) <- c("Feature_name", "IDs", "scores", "run","barcode","database")
tab_i_comb <- rbind(tab_i[,1:6], tab_i_def)
}
else tab_i_comb <- tab_i
tab_i_comb$Feature_name <- str_remove_all(tab_i_comb$Feature_name,"\001")
tab_list[[i]] <- tab_i_comb
}
metatablist[[run]] <- tab_list
}
#Combine taxonomy onto OTUs
metacomblist_tab=list()
for(run in 1:length(runids)){
comblist_rel = metacomblist_rel[[run]]
comblist_tab = metacomblist_rel[[run]]
tab_list = metatablist[[run]]
for(i in 1:length(barcodes)){
combi = comblist_rel[[i]]
tabi = tab_list[[i]]
tabi_pruned = tabi[which(tabi$Feature_name %in% combi$Feature_name),]
comblist_tab[[i]] <- cbind(combi, tabi_pruned[match(combi$Feature_name, tabi_pruned$Feature_name),"IDs"])
names(comblist_tab[[i]])[9]<-"IDs"
}
metacomblist_tab[[run]] <- comblist_tab
}
metacomblist <- reverseList(metacomblist)
metacomblist_rel <- reverseList(metacomblist_rel)
metacomblist_tab <- reverseList(metacomblist_tab)
metarel_list <- reverseList(metarel_list)
metatablist <- reverseList(metatablist)
comblist <- lapply(metacomblist, function(L){do.call(rbind, L)})
comblist_rel <- lapply(metacomblist_rel, function(L){do.call(rbind, L)})
comblist_tab <- lapply(metacomblist_tab, function(L){do.call(rbind, L)})
rel_list <- lapply(metarel_list, function(L){do.call(rbind, L)})
tablist <- lapply(metatablist, function(L){do.call(rbind, L)})
combinetab = rbind(comblist_tab[[1]],comblist_tab[[2]],comblist_tab[[3]],comblist_tab[[4]],comblist_tab[[5]],comblist_tab[[6]])
combinetab$OTU <-  str_remove(combinetab$OTU,"__.+$")
combinetab$OTU <-  str_remove(combinetab$OTU,"_NA.+$")
combinetab[which(combinetab$run == "RUN5"),] -> RUN5
RUN5
View(RUN5)
combinetab[which(combinetab$run == "RUN5" & combinetab$database=="SILVA"),] -> RUN5
write.table(customtab, "RUN5_SILVA.tsv", sep="\t", row.names = F, col.names = T)
write.table(RUN5, "RUN5_SILVA.tsv", sep="\t", row.names = F, col.names = T)
